#!/usr/bin/env python2
from sys import argv
from matplotlib import pyplot as plt
from iutils import *

# group of arms, i - to which went
def group(trial, i):
	# test
	# return 0

	# previous
	return int(trial[i] < 3)

#=========================

if len(argv) < 2:
	print 'USAGE: (1)<trial file of the 6-AWM task [generated by another script] >'
	print 'ANALYSE errors / arm entries order and preference'
	exit(0)

f = open(argv[1])
trials = []
for l in f:
	if len(l) == 0:
		continue

	trial = [int(t) for t in l.split() if len(t) > 0]
	trials.append(trial)

print 'Trials:'
print trials

# total number of arm entries by probability to make an error randomly
total =  [[0] * 5, [0] * 5, [0] * 5]
errors = [[0] * 5, [0] * 5, [0] * 5]

for trial in trials:
	nvis = 0
	vis = [False] * 6

	print trial
	
	ai = 0
	for a in trial:
		if nvis > 0 and nvis < 6:
			total[group(trial, ai)][nvis - 1] += 1 

		if not vis[a]:
			nvis += 1
			vis[a] = True
		elif nvis < 6:
			errors[group(trial, ai)][nvis - 1] += 1

		ai += 1

		# total number of cases where error could have been made with corresponding random probability nvis/6
print errors
print total

r1 = [i for i in range(1,6) if total[0][i-1] > 0]
r2 = [i for i in range(1,6) if total[1][i-1] > 0]

plt.scatter(r1, [errors[0][i] / float(total[0][i]) for i in range(0, len(total[0])) if total[0][i] > 0], color='r')
plt.plot(r1, [errors[0][i] / float(total[0][i]) for i in range(0, len(total[0])) if total[0][i] > 0], color='r')
plt.scatter(r2, [errors[1][i] / float(total[1][i]) for i in range(0, len(total[1])) if total[1][i] > 0], color = 'b')
plt.plot(r2, [errors[1][i] / float(total[1][i]) for i in range(0, len(total[1])) if total[1][i] > 0], color = 'b')
plt.xlabel('Number of arms visited so far', fontsize=20)
plt.ylabel('Probability to make a mistake', fontsize=20)
plt.xticks(range(1,6))
plt.subplots_adjust(right=0.95, top=0.95)
plt.legend(['Target arms', 'Control arms'], fontsize=20)
set_xticks_font(15)
set_yticks_font(15)
plt.show()
